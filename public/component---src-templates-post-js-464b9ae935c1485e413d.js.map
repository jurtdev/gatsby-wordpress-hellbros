{"version":3,"sources":["webpack:///./src/components/Comments.js","webpack:///./src/components/CommentForm.js","webpack:///./src/templates/post.js"],"names":["Comment","comment","commentId","content","date","author","children","isChild","hasChildren","nodes","length","id","className","dangerouslySetInnerHTML","__html","name","comments","onClick","event","preventDefault","ChildComments","map","key","Comments","post","header","CommentForm","useState","email","values","setValues","handleChange","persist","target","value","console","log","onSubmit","htmlFor","onChange","type","required","pageQuery","Post","props","data","wpgraphql","title","categories","tags","to","slug","category","tag"],"mappings":"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","file":"component---src-templates-post-js-464b9ae935c1485e413d.js","sourcesContent":["import React from \"react\"\n\nconst Comment = ({\n  comment: { commentId, content, date, author, children },\n  isChild,\n}) => {\n  let hasChildren = false\n  if (children && children.nodes.length) {\n    hasChildren = true\n  }\n\n  return (\n    <div id={commentId} className=\"comment\">\n      <div dangerouslySetInnerHTML={{ __html: content }} />\n      <p className=\"meta\">\n        From {author.name} on {date}\n      </p>\n      {hasChildren && <ChildComments comments={children.nodes} />}\n      {!isChild && (\n        <>\n          <p>\n            <button\n              onClick={event => {\n                event.preventDefault()\n              }}\n            >\n              Reply\n            </button>\n          </p>\n        </>\n      )}\n    </div>\n  )\n}\n\nconst ChildComments = ({ comments }) =>\n  comments.map(comment => (\n    <Comment key={comment.id} comment={comment} isChild />\n  ))\n\nconst Comments = ({ post }) => {\n  const comments = post.comments.nodes\n  let header = `No Comments Yet!`\n  if (comments.length === 1) {\n    header = `Comment`\n  } else if (comments.length > 1) {\n    header = `Comments`\n  }\n  return (\n    <section className=\"comments\">\n      <h2>{header}</h2>\n      {comments.map(comment => (\n        <Comment key={comment.id} comment={comment} />\n      ))}\n    </section>\n  )\n}\n\nexport default Comments\n","import React, { useState } from \"react\"\n\nconst CommentForm = () => {\n  const defaultValues = {\n    name: ``,\n    email: ``,\n    comment: ``,\n  }\n  const [values, setValues] = useState(defaultValues)\n\n  const handleChange = event => {\n    event.persist()\n    setValues(values => ({\n      ...values,\n      [event.target.name]: event.target.value,\n    }))\n    console.log(values)\n  }\n\n  return (\n    <form\n      id=\"comment-form\"\n      onSubmit={event => {\n        event.preventDefault()\n      }}\n    >\n      <h3>Leave a Reply</h3>\n      <p>\n        <label htmlFor=\"comment-field\">Comment</label>\n        <textarea\n          name=\"comment\"\n          id=\"comment-field\"\n          onChange={handleChange}\n          value={values.comment}\n        ></textarea>\n      </p>\n      <div className=\"meta\">\n        <p>\n          <label htmlFor=\"name-field\">Name</label>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id=\"name-field\"\n            value={values.name}\n            onChange={handleChange}\n            required\n          />\n        </p>\n        <p>\n          <label htmlFor=\"email-field\">Email</label>\n          <input\n            type=\"text\"\n            name=\"email\"\n            id=\"email-field\"\n            value={values.email}\n            onChange={handleChange}\n            required\n          />\n        </p>\n        <br />\n        <p>\n          <input type=\"submit\" value=\"Submit\" id=\"submit-button\" />{\" \"}\n        </p>\n      </div>\n    </form>\n  )\n}\n\nexport default CommentForm\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport Comments from \"../components/Comments\"\nimport CommentForm from \"../components/CommentForm\"\n\nconst Post = props => {\n  const {\n    data: {\n      wpgraphql: { post },\n    },\n  } = props\n  const { title, content, author, categories, tags } = post\n  return (\n    <Layout>\n      <SEO title={title} />\n      <h1>{title}</h1>\n      <ul className=\"post meta\">\n        <li>\n          Author: <Link to={`/user/${author.slug}`}>{author.name}</Link>\n        </li>\n        <li>\n          Categories:\n          <ul>\n            {categories.nodes.map(category => (\n              <li>\n                <Link to={`/blog/category/${category.slug}`}>\n                  {category.name}\n                </Link>\n              </li>\n            ))}\n          </ul>\n        </li>\n        <li>\n          Tags:{\" \"}\n          {tags.nodes.length > 0 ? (\n            <ul>\n              {tags.nodes.map(tag => (\n                <li>\n                  <Link to={`/blog/tag/${tag.slug}`}>{tag.name}</Link>\n                </li>\n              ))}\n            </ul>\n          ) : (\n            \"none\"\n          )}\n        </li>\n      </ul>\n      <div dangerouslySetInnerHTML={{ __html: content }}></div>\n      <Comments post={post} />\n      <CommentForm />\n    </Layout>\n  )\n}\n\nexport default Post\n\nexport const pageQuery = graphql`\n  fragment CommentFields on WPGraphql_Comment {\n    date\n    id\n    author {\n      ... on WPGraphql_CommentAuthor {\n        id\n        email\n        name\n        url\n      }\n    }\n    commentId\n    content(format: RENDERED)\n  }\n\n  query GET_POST($id: ID!) {\n    wpgraphql {\n      post(id: $id) {\n        title\n        content\n        uri\n        author {\n          name\n          nickname\n          slug\n        }\n        categories {\n          nodes {\n            slug\n            name\n          }\n        }\n        tags {\n          nodes {\n            slug\n            name\n          }\n        }\n        comments {\n          nodes {\n            ...CommentFields\n            children {\n              nodes {\n                ...CommentFields\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}